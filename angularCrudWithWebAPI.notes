
[5:47 PM] Vikrant Dekate
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
 
@Injectable({
  providedIn: 'root'
})
export class PaymentsService {
  private url='https://8080-bdedfececadfabcaaaceeafebecebbffdafdefabcc.premiumproject.examly.io/api/PaymentDetail';
 
 
  constructor(private http:HttpClient) { }
 
  //get all details Service
  getAll(): Observable<any[]> {
    return this.http.get<any[]>(this.url+'/GetPaymentDetail');
  }
 
  //Create Payment
  Create(data:any){
    let resData:any="";
    let httpHeader:HttpHeaders=new HttpHeaders({
      Accept:"application/json"
    })
    this.http.post("https://8080-bdedfececadfabcaaaceeafebecebbffdafdefabcc.premiumproject.examly.io/api/PaymentDetail/PostPaymentDetail",data,{headers:httpHeader})
    .subscribe(res=>{
      resData=res;
    },
    error=>{
      resData=error
    })
    return resData
  }
 
  //get details using ID
  getDetailsById(id:number):Observable<any>{
    const url=`${this.url}/GetPaymentDetail/${id}`;
    return this.http.get<any>(url);
  }
 
  //Delete Details using ID
  deleteById(id:number):Observable<any>{
    const url=`${this.url}/DeletePaymentDetail/${id}`;
    return this.http.delete<any>(url);
  }
 
  //Update Details Using ID
  UpdateById(id:number,updatedData:any):Observable<any>{
    const url=`${this.url}/UpdatePaymentDetail/${id}`;
    return this.http.put<any>(url,updatedData);
  }
}
 
[5:47 PM] Vikrant Dekate
import { Component, OnInit } from '@angular/core';
import { PaymentsService } from '../payments.service';
import { NgForm } from '@angular/forms';
import { Router } from '@angular/router';
 
@Component({
  selector: 'app-pay',
  templateUrl: './pay.component.html',
  styleUrls: ['./pay.component.css']
})
export class PayComponent implements OnInit {
  items: any[];
  selectedItemId:number;
  selectedItemDetails:any;
  inputItemId:number;
  idNotFound:boolean=false;
 
  deleteItemId:number;
 
  updateItemId:number;
  updatedData:any={};
 
  constructor(private pay:PaymentsService,private r:Router) { }
 
  // ngOnInit() {
  // }
 
  ngOnInit():void{
    this.loadItems();
  }
 
  //Retrieve All Details  
  loadItems():void {
    this.pay.getAll().subscribe(data=>{
      this.items=data;
    });
  }
 
  //Add Details
  onSubmitPost(postForm:NgForm){
    this.pay.Create(postForm.value);
    console.log("Added Successfully!!!");
  }
 
  //Details using ID
  selectItem(id:number):void{
    // this.selectedItemId=id;
    this.pay.getDetailsById(id).subscribe((details)=>{
      this.selectedItemDetails=details;
    });
  }
 
  fetchDetails(): void {
    if (this.inputItemId) {
      this.pay.getDetailsById(this.inputItemId).subscribe((details) => {
        this.selectedItemDetails = details;
      },
      (error)=>{
        this.idNotFound=true;
        console.error('Not found',error);
      }
      );
    }
  }
 
  //Delete using Id
  deleteItem():void{
    if(this.deleteItemId){
      this.pay.deleteById(this.deleteItemId).subscribe(
        ()=>{
          console.log('Item Delete Successfully!!!');
        },
        (error)=>{
          console.error('Error deleting',error);
        }
      )
    }
  }
 
  //Update Details using Id
  updateDetails():void{
    if(this.updateItemId && Object.keys(this.updatedData).length>0){
      this.pay.UpdateById(this.updateItemId,this.updatedData).subscribe(
        ()=>{
          console.log('Details Updated');
        },
        (error)=>{
          console.error('Error Update');
        }
      );
    }
  }
 
}
 
[5:47 PM] Vikrant Dekate
<!-- Display all Details -->
<h2>All Payments</h2>
<br>
<table class="table table-stripped">
  <tr>
    <th>Payment ID</th>
    <th>Owner Name</th>
    <th>Card Number</th>
    <th>Expiry Date</th>
    <th>Security Code</th>
    <th></th>
    <th>Actions</th>
  </tr>
  <tr *ngFor="let item of items">
    <td>{{item.paymentDetailId}}</td>
    <td>{{item.cardOwnerName}}</td>
    <td>{{item.cardNumber}}</td>
    <td>{{item.expirationDate}}</td>
    <td>{{item.securityCode}}</td>
    <td><button class="btn btn-info">Details</button></td>
    <td><button (click)="Edit()" class="btn btn-primary">Edit</button></td>
    <td><button (click)="Delete()" class="btn btn-warning">Delete</button></td>
  </tr>
</table>
 
 
<hr style="border: 2px solid black;">
 
 
<!-- Add Payment Details -->
<h1>Create</h1>
<form #postForm="ngForm" (ngSubmit)="onSubmitPost(postForm)">
  <div class="form-group">
      <label for="cardNumber">Card Number</label> <br>
      <input type="text" name="cardNumber" ngModel>
  </div>
  <div class="form-group">
      <label for="cardOwnerName">Card Owner Name</label><br>
      <input type="text" name="cardOwnerName"  ngModel>
  </div>
  <div class="form-group">
      <label for="expirationDate">Expirty Date</label><br>
      <input type="text" name="expirationDate" ngModel>
  </div>
  <div class="form-group">
      <label for="securityCode">Security Code</label><br>
      <input type="text" name="securityCode" ngModel>
  </div>
  <div class="form-group">
      <button class="btn btn-primary my-3" type="submit">Submit</button>
  </div>
</form>
<hr style="border: 2px solid black;">
 
 
<!-- Display Details using ID -->
<h2>Details of Selected Item</h2>
<label for="paymentDetailId">Enter PaymentID:</label>
<input type="number" id="paymentDetailId" [(ngModel)]="inputItemId" name="inputItemId">
<button (click)="fetchDetails()">Fetch Details</button>
 
<div *ngIf="selectedItemDetails && !idNotFound;else noDetails" >
  <table class="table table-stripped">
    <tr>
      <th>Payment ID</th>
      <th>Owner Name</th>
      <th>Card Number</th>
      <th>Expiry Date</th>
      <th>Security Code</th>
    </tr>
    <tr>
      <td>{{selectedItemDetails.paymentDetailId}}</td>
      <td>{{selectedItemDetails.cardOwnerName}}</td>
      <td>{{selectedItemDetails.cardNumber}}</td>
      <td>{{selectedItemDetails.expirationDate}}</td>
      <td>{{selectedItemDetails.securityCode}}</td>
    </tr>
  </table>
  <!-- Add other properties as needed -->
</div>
<ng-template #noDetails>
  <p>No such ID exist</p>
</ng-template>
<hr style="border: 2px solid black;">
 
 
<!-- Delete Details using ID -->
<h2>Delete</h2>
<label for="deleteItemId">Enter PaymentID to Delete: </label>
<input type="number" id="deleteItemId" [(ngModel)]="deleteItemId" name="deleteItemId">
<button (click)="deleteItem()">Delete</button>
<hr style="border: 2px solid black;">
 
<!-- Update Details using ID -->
<h2>Update</h2>
<label for="updateItemId">Enter ID to Update</label>
<input type="number" id="updateItemId" [(ngModel)]="updateItemId" name="updateItemId">
<br>
<label for="updatedData">Enter CardOwnerName</label>
<input type="text" id="updatedData" [(ngModel)]="updatedData.cardOwnerName" name="updateItemId"><br>
<label for="updatedData">Enter CardNumber</label>
<input type="text" id="updatedData" [(ngModel)]="updatedData.cardNumber" name="updateItemId"><br>
<label for="updatedData">Enter Expiry Date</label>
<input type="text" id="updatedData" [(ngModel)]="updatedData.expirationDate" name="updateItemId"><br>
<label for="updatedData">Enter Security Code</label>
<input type="text" id="updatedData" [(ngModel)]="updatedData.securityCode" name="updateItemId"><br>
<button (click)="updateDetails()">Update</button>
 